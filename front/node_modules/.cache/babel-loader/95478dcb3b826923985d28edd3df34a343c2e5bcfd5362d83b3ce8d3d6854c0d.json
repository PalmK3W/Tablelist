{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STEPDev\\\\Desktop\\\\Project\\\\test_exam2\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport ListJson from './list.json';\nimport Table from 'react-bootstrap/Table';\nimport { useState, Fragment, useMemo } from 'react';\nimport Pagination from './Pagination';\nimport AED from './AED';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  //variable\n  let [Device, setDevice] = useState([]);\n  let [Inputdata, setInputdata] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 16;\n  let [Foundtext, setFoundtext] = useState(ListJson.length);\n\n  //Filter Data\n  const filterDevice = Inputdata => {\n    return ListJson.filter(item => {\n      return item.name.toLowerCase().includes(Inputdata.toLowerCase());\n    });\n  };\n\n  //Table\n  const currentTableDevice = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * postsPerPage;\n    const lastPageIndex = firstPageIndex + postsPerPage;\n    if (Inputdata === \"\") {\n      setFoundtext(ListJson.length);\n      return ListJson.slice(firstPageIndex, lastPageIndex);\n    } else {\n      setFoundtext(filterDevice(Inputdata).length);\n      return filterDevice(Inputdata).slice(firstPageIndex, lastPageIndex);\n    }\n  }, [Inputdata, currentPage]);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search_device\",\n        type: \"text\",\n        placeholder: \"Search by name...\",\n        value: Inputdata,\n        onChange: e => setInputdata(e.target.value),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"searchtxt\",\n        children: [\"found result: \", Foundtext]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AED\",\n        children: /*#__PURE__*/_jsxDEV(AED, {\n          data: Device\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device_table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        borderless: true,\n        hover: true,\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Device Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentTableDevice.map((device, index) => {\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: device.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: device.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: ListJson.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"aMZ99SsgeKM8LpSIfVm/cIfRP54=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ListJson","Table","useState","Fragment","useMemo","Pagination","AED","App","Device","setDevice","Inputdata","setInputdata","currentPage","setCurrentPage","postsPerPage","Foundtext","setFoundtext","length","filterDevice","filter","item","name","toLowerCase","includes","currentTableDevice","firstPageIndex","lastPageIndex","slice","paginate","pageNumber","e","target","value","map","device","index","price"],"sources":["C:/Users/STEPDev/Desktop/Project/test_exam2/front/src/App.js"],"sourcesContent":["import ListJson from './list.json';\nimport Table from 'react-bootstrap/Table';\nimport { useState, Fragment,useMemo} from 'react';\nimport Pagination from './Pagination';\nimport AED from './AED';\n\nexport default function App() {\n//variable\n    let [Device,setDevice] = useState([]);\n    let [Inputdata, setInputdata] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const postsPerPage = 16;\n    let [Foundtext,setFoundtext] = useState(ListJson.length);\n   \n//Filter Data\n    const filterDevice = (Inputdata) => {\n               return ListJson.filter((item)=>{\n                return item.name.toLowerCase().includes(Inputdata.toLowerCase());\n        });\n    }\n\n//Table\n    const currentTableDevice = useMemo(()=>{\n        const firstPageIndex = (currentPage - 1) * postsPerPage;\n        const lastPageIndex = firstPageIndex + postsPerPage;\n        if(Inputdata===\"\"){setFoundtext(ListJson.length);return ListJson.slice(firstPageIndex, lastPageIndex);}\n        else{setFoundtext(filterDevice(Inputdata).length);return filterDevice(Inputdata).slice(firstPageIndex, lastPageIndex);}\n    },[Inputdata,currentPage])\n\n// Change page\n        const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n    \nreturn(\n    <>\n          \n          \n           \n            <div className=\"Search\">\n                \n                <input\n                    className=\"search_device\"\n                    type=\"text\"\n                    placeholder=\"Search by name...\"\n                    value={Inputdata}\n                    onChange={(e)=>setInputdata(e.target.value)}\n                    autoFocus\n                />\n                <p className=\"searchtxt\">found result: {Foundtext}</p>\n                <div className='AED'>\n                <AED data={Device}/>\n                </div>\n            </div>\n            \n            <div className=\"device_table\">\n                \n            <Table striped borderless hover size=\"lg\" >\n            <thead>\n            <tr>\n                <th>id</th>\n                <th>Device Name</th>\n                <th>Price</th>\n               \n            </tr>\n            </thead>\n            <tbody>\n            {currentTableDevice.map((device,index)=>{\n                    \n                    return(\n                        <Fragment key={index}>\n                        \n                        <tr >\n                            <td>{index+1}</td>\n                            <td >{device.name}</td>\n                            <td >{device.price}</td>\n                         </tr>\n                         \n                        </Fragment>\n                    )}\n                   \n            )}\n            \n            </tbody>\n                </Table>\n            </div>\n            \n            <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={ListJson.length}\n            paginate={paginate}\n            />\n            \n    </>\n)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}